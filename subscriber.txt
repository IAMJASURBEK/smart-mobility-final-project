#include "ros/ros.h"
#include "turtlesim/Color.h" 
#include "turtlesim/Pose.h"

// Topic messages callback
void color_callback(const turtlesim::Color::ConstPtr& col)
{
ROS INFO ("red: %d, green: %d, blue: %d", col->r, col->g, col->b);
}

//pose_callback

void pose_callback(const turtlesim::Pose& msgIn) {

ROS INFO STREAM(std::setprecision(2) << std::fixed
<< "position=(" << msgIn.x << "," << msgIn.y <<< ")"
<< "direction" << msgIn. theta);

}

int main(int argc, char **argv)

    // Initiate a new ROS node named "listener"

        ros::init(argc, argv, "subTsim"); 
        //create a node handle: it is reference assigned to a new node
        ros::NodeHandle node;

    // Subscribe to a given topic, in this case "chatter".
        //color callback: is the name of the callback function that will be executed each time a message is received. 
    ros::Subscriber sub= node.subscribe("/turtlel/color_sensor", 1000, color_callback);

    ros::Subscriber subl-node.subscribe("turtle1/pose", 1000, pose_callback); 
    // Enter a loop, pumping callbacks
    ros::spin();

    return 0;
}